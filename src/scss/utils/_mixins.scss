//==========================================================================
// Mixins
//==========================================================================

@mixin scrollbar($size: 0, $bg-color: transparent, $fg-color: transparent) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;

    &-thumb {
      background: $fg-color;
    }
    &-track {
      background: $bg-color;
    }
  }

  @supports (scrollbar-width: thin) {
    & {
      scrollbar-color: unset;
      scrollbar-width: none;
      // -ms-overflow-style: none;
    }
  }
}

@mixin fvar($stretch, $weight, $style: $upright) {
  font-variation-settings: $style, $stretch, $weight;
}

@mixin cta-set-01($position: $default, $before: $full, $after: $null, $bg-color: transparent) {
  --pad-x: #{rem(4)};
  --pad-y: 0;
  --bg-w: #{$before};
  --bg-h: #{rem(2.4)};
  --bg-color: #{$bg-color};
  --bg-image: linear-gradient(
    -90deg,
    var(--magenta-30) 0%,
    var(--purple-30) 80%
  );
  --bg-position: #{$position};
  --bg-size: var(--bg-w) var(--bg-h);
  padding: var(--pad-x) var(--pad-y);
  background: var(--bg-color) var(--bg-image) var(--bg-position)/var(--bg-size) no-repeat;

  &:hover,
  &:active {
    --bg-w: #{$after};
    --bg-size: var(--bg-w) var(--bg-h);
    color: var(--black);
  }
}

// https://css-tricks.com/ghost-buttons-with-directional-awareness-in-css/
@mixin cta-set-02($bg-color: transparent) {
  position: relative;
  border-radius: rem(4);
  background: $bg-color;
  padding-inline-start: 8px;
  padding-inline-end: 8px;
  overflow: hidden;
  color: var(--black);

  display: grid;
  place-content: center;
  min-block-size: var(--cta-block);
  @include fvar($tera, $medium);

  span, p {
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
    border-radius: rem(4);
  }

  span {
    z-index: 1;
    -webkit-clip-path: var(--clip);
    clip-path: var(--clip);

    &:nth-of-type(1):hover,
    &:nth-of-type(2):hover,
    &:nth-of-type(3):hover,
    &:nth-of-type(4):hover {
      --clip: polygon(0 0, 100% 0, 100% 100%, 0 100%);
      z-index: 2;
    }
    &:nth-of-type(1):hover ~ p:nth-of-type(1),
    &:nth-of-type(2):hover ~ p:nth-of-type(2),
    &:nth-of-type(3):hover ~ p:nth-of-type(3),
    &:nth-of-type(4):hover ~ p:nth-of-type(4) {
      --clip: inset(0 0 0 0);
    }
    &:nth-of-type(1) {
      // top
      --clip: polygon(0 0, 100% 0, 50% 50%, 50% 50%);
    }
    &:nth-of-type(2) {
      // right
      --clip: polygon(100% 0, 100% 100%, 50% 50%);
    }
    &:nth-of-type(3) {
      // bottom
      --clip: polygon(0 100%, 100% 100%, 50% 50%);
    }
    &:nth-of-type(4) {
      // left
      --clip: polygon(0 0, 0 100%, 50% 50%);
    }
  }

  p {
    display: grid;
    place-content: center;
    @include fvar($tera, $medium);

    -webkit-clip-path: var(--clip);
    clip-path: var(--clip);
    transition: clip-path .25s ease;
    background: var(--black);
    color: var(--white);

    &:nth-of-type(1) {
      --clip: inset(0 0 100% 0);
    }
    &:nth-of-type(2) {
      --clip: inset(0 0 0 100%);
    }
    &:nth-of-type(3) {
      --clip: inset(100% 0 0 0);
    }
    &:nth-of-type(4) {
      --clip: inset(0 100% 0 0);
    }
  }
}

@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

@mixin user-select {
  /* autoprefixer: ignore next */
  user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -webkit-touch-callout: none;
}

/**
 * Скрывает элемент визуально и удаляет его из базового потока,
 * но позволяет вспомогательным технологиям получить к нему доступ
 *
 * https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css#L114
 * https://gist.github.com/hankchizljaw/fae40371ada3ea4301624091bf4379e9
 * https://css-tricks.com/snippets/css/accessibilityseo-friendly-css-hiding/
 */
@mixin visually-hidden {
  position: absolute;
  margin: 0;
  border: 0;
  padding: 0;
  width: 1px;
  height: auto;
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
}
