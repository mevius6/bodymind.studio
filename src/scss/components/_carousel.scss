@use "sass:list";
@use "sass:map";

// Многопутевой доступ к ресурсам
@function img($key, $path, $type: '.webp') {
  @if $path == '1' {
    $id: map.get($assets-01, $key);
    @return url('../img/set-#{$path}/' + $id + $type);
  } @else if $path == '2'{
    $id: map.get($assets-02, $key);
    @return url('../img/set-#{$path}/' + $id + $type);
  } @else {
    @error "Unknown path #{$path}.";
  }
}

// Резервный формат изображений для IE11 и Safari
@mixin images($assets) {
  @each $asset in $assets {
    $i: list.index($assets, $asset);
    @if $assets == $assets-01 {
      .no-webp &:nth-child(#{$i}) figure {
        --bg-image: #{img($i, '1', '.jpg')};
      }
      .webp &:nth-child(#{$i}) figure {
        --bg-image: #{img($i, '1')};
      }
    } @else if $assets == $assets-02 {
      .no-webp &:nth-child(#{$i}) figure {
        --bg-image: #{img($i, '2', '.jpg')};
      }
      .webp &:nth-child(#{$i}) figure {
        --bg-image: #{img($i, '2')};
      }
    } @else {
      @error "Unknown assets #{$assets}.";
    }
  }
}

$assets-01: (
  1: '1',
  2: '2',
  3: '3',
  4: '4',
  5: '5',
  6: '6',
  7: '7',
  8: '8'
);

$assets-02: (
  1: '1',
  2: '2',
  3: '3',
  4: '4',
  5: '4'
);

// https://css-tricks.com/css-only-carousel/
.c-carousel {
  display: flex;
  margin: 0 auto;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  overscroll-behavior: contain;
  -webkit-overflow-scrolling: touch;

  &::-webkit-scrollbar {
    width: 0; height: 0;

    &-thumb {
      border: 0;
      background: transparent;
    }
    &-track {
      background: transparent;
    }
  }

  &::before,
  &::after {
    content: '';
    position: sticky;
    z-index: 1;
    display: inline-block;
    min-width: calc(var(--side-fade) * 1px);
    height: 100vh;
    background: var(--bg-image);
  }

  //? https://github.com/cssnano/cssnano/issues/732
  &::before {
    --bg-image: linear-gradient(
      to left,
      hsl(0 0% 95.7% / 0),
      hsl(0 0% 95.7% / 1)
    );
    left: 0;
    display: none;
  }

  &::after {
    --bg-image: linear-gradient(
      to right,
      hsl(0 0% 95.7% / 0),
      hsl(0 0% 95.7% / 1)
    );
    right: 0;
  }

  &__controls {
    --dot-size: #{rem(16)};
    position: fixed;
    bottom: rem(24);
    left: 50%;
    transform: translate(-50%, -50%);
    width: min-content;
    height: rem(24);
    display: none;

    a {
      --sx: 0.9;
      flex: 0 0 auto;
      width: var(--dot-size);
      height: var(--dot-size);
      --alpha: 0.5;
      opacity: var(--alpha);
      transform: scale(var(--sx));
      transition-property: opacity, transform;
      transition-duration: var(--speed);
      transition-timing-function: var(--timing);
      border-radius: 50%;
      background-color: var(--gray-70);

      &:not(:last-child) {
        margin-inline-end: calc(var(--dot-size) / 2);
      }

      &:hover {
        --sx: 1;
        --alpha: 1;
      }

      &:focus {
        --sx: 0.8;
        outline: none;
      }
    }
  }
  /*
  @supports (scroll-snap-type: x) {
    &__controls {
      display: none;
    }
  } */
}

@supports (display: grid) {
  .c-carousel__item {
    position: relative;
    display: grid;
    grid-template-columns: repeat(
      auto-fit,
      minmax(calc(42.5% + 2.5rem), 1fr)
    );
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(var(--mobile), 100%), 1fr)
    );
    grid-auto-rows: minmax(min-content, 1fr);
    min-width: 100%;
    height: 100vh;
    overflow-y: scroll;
    scroll-snap-align: start;
    scrollbar-width: inherit;

    &-meta {
      padding: rem(16);
    }

    &-img {
      grid-row-start: 1;

      display: flex;
      justify-content: center;

      > figure {
        --bg-position: top;
        min-block-size: 60vh;
        width: 100%;
        height: 100%;
        background: var(--bg-image) var(--attachment) var(--bg-position)/cover no-repeat;
      }

      > .lazy {
        --bg-image: none;
        background-image: var(--bg-image);
        background-color: var(--gray-20);
      }
    }

    &[data-image-set='1'] { @include images($assets-01) }
    &[data-image-set='2'] { @include images($assets-02) }
  }

  @media screen and (min-width: $tablet) {
    .c-carousel__controls {
      display: inline-flex;
      align-items: center;
    }

    .c-carousel__item {
      &-meta {
        margin: 0 auto;
        h2,
        p {
          max-inline-size: calc(var(--mobile) * 2);
          color: var(--black);
        }
        p { min-block-size: rem(80); }
      }
      &-img { grid-column-start: 2; }
    }
  }
}
