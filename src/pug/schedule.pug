extends ./template/_page

block vars
  -
    let page = data.pages.schedule;
  -
    const curr = new Date()
          currentDate  = curr.getDate()
          currentDay   = curr.getDay()
          currentMonth = curr.getMonth()
          currentYear  = curr.getFullYear()
    const monthsCount  = 12
    const daysInWeek   = 7
  -
    const daysLabel = [
      'Воскресенье',
      'Понедельник',
      'Вторник',
      'Среда',
      'Четверг',
      'Пятница',
      'Суббота'
    ]
  -
    const daysLabelAbbr = [
      'ВС',
      'ПН',
      'ВТ',
      'СР',
      'ЧТ',
      'ПТ',
      'СБ'
    ]
  -
    const monthsLabel = [
      'Январь',
      'Февраль',
      'Март',
      'Апрель',
      'Май',
      'Июнь',
      'Июль',
      'Август',
      'Сентябрь',
      'Октябрь',
      'Ноябрь',
      'Декабрь'
    ]
  -
    const anchors = [
      {
        'titles': [
          'Gyrotonic'
        ]
      },
      {
        'titles': [
          'Men’s Pilates',
          'Pilates Mat',
          'Pilates Reformer',
          'Power Pilates'
        ]
      },
      {
        'titles': [
          'Fitness Yoga',
          'Fly Yoga',
          'Hatha Yoga',
          'Relax Yoga'
        ]
      },
      {
        'titles': [
          'Full Body',
          'Power Class',
          'Stretching',
          'Super Sculpt',
          'TRX'
        ]
      },
      {
        'titles': [
          'Dance Therapy',
          'Flexibility',
          'Foundation'
        ]
      }
    ]

block content

  mixin sessionCard(options)
    .c-session__card
      each anchor, index in anchors
        if anchor.titles.includes(options.title)
          h3.c-session__title: a(href=`/workout#section-id-${index}`)= options.title
      span.c-session__date= options.date
      span.c-session__time= options.time
      span.c-session__coach= options.coach
      span.c-session__cta: a(href="#") Записаться
      if anchors[4].titles.includes(options.title)
        span.c-session__badge дети

  mixin session(options)
    .c-session(
      class={'c-session--merged': options.merge === true}
      style=`--date: var(--day-${options.day}); --time: var(--of-${options.time[0]});`
      data-date=""
      data-time=`${options.time[0]}:00—${options.time[1]}:00`
    )
      //- Последняя дата текущего месяца
      - let final = new Date(currentYear, (currentMonth + 1), 0)
      //- Актуальные даты
      - for (let i = 1; i < daysInWeek; i++)
        -
          let start = currentDate - currentDay + i
              setDate = new Date(curr.setDate(start))
              getDate = curr.getDate()
        //- Если опция миксина соответствует дню недели
        if options.day === curr.getDay()
          if options.merge === true
            each i in Array.from(Array(2).keys())
              +sessionCard({
                date: `${daysLabel[options.day]}, ${getDate}`,
                time: `${options.time[0]}:00—${options.time[1]}:00`,
                title: options.title[i],
                coach: options.coach[i]
              })
          else
            +sessionCard({
              date: `${daysLabel[options.day]}, ${getDate}`,
              time: `${options.time[0]}:00—${options.time[1]}:00`,
              title: options.title,
              coach: options.coach
            })
        //- Прервать цикл, когда он достигнет последнего числа месяца
        if getDate === final.getDate()
          - break
      //- Первое число следующего месяца
      - let nextDate = new Date(currentYear, currentMonth + 1, 1).getDate()
      //- Для оставшихся дней недели, после последнего числа месяца
      - for (let i = final.getDay() + 1; i < daysInWeek; i++)
        -
          let start = nextDate + i - (final.getDay() + 1)
              setDate = new Date(curr.setDate(start))
              getDate = curr.getDate()
        //- Если опция миксина соответствует оставшемуся дню недели
        if options.day === i
          if options.merge === true
            each i in Array.from(Array(2).keys())
              +sessionCard({
                date: `${daysLabel[options.day]}, ${getDate}`,
                time: `${options.time[0]}:00—${options.time[1]}:00`,
                title: options.title[i],
                coach: options.coach[i]
              })
          else
            +sessionCard({
              date: `${daysLabel[options.day]}, ${getDate}`,
              time: `${options.time[0]}:00—${options.time[1]}:00`,
              title: options.title,
              coach: options.coach
            })

  mixin timeSlot(time)
    h2.time-slot(style=`grid-row: time-${time}`)
      | #{time}:00
    block

  mixin dateSlot(day, date)
    span.date-slot(aria-hidden="true" style=`grid-column: track-${day}; grid-row: tracks;`)
      | #{daysLabel[day]}, #{date}

  h1#schedule-heading
    | Расписание групповых занятий
  h2.fs-h3.current=`${monthsLabel[currentMonth]} ${currentYear} г.`

  include ./calendar

  .o-schedule(aria-labelledby="schedule-heading")
    - for (let i = 1; i < daysInWeek; i++)
      -
        let start = currentDate - currentDay + i
            setDate = new Date(curr.setDate(start))
            getDate = curr.getDate()
      +dateSlot(i, getDate)
      //- Прервать цикл, когда он достигнет последнего числа месяца
      if getDate === lastDate.getDate()
        - break
    //- Первое число следующего месяца
    - let nextDate = new Date(currentYear, currentMonth + 1, 1).getDate()
    //- Для оставшихся дней недели, после последнего числа месяца
    - for (let i = lastDate.getDay() + 1; i < daysInWeek; i++)
      -
        let start = nextDate + i - (lastDate.getDay() + 1)
            setDate = new Date(curr.setDate(start))
            getDate = curr.getDate()
      +dateSlot(i, getDate)

    +timeSlot('09')
      +session({
        day: 2,
        time: ['09', '10'],
        title: 'Hatha Yoga',
        coach: 'Елена Лютая'
      })
      +session({
        day: 5,
        time: ['09', '10'],
        title: 'Hatha Yoga',
        coach: 'Елена Лютая'
      })

    +timeSlot('10')
      +session({
        day: 1,
        time: ['10', '11'],
        title: 'Power Class',
        coach: 'Анна Сафронова'
      })
      +session({
        day: 2,
        time: ['10', '11'],
        title: 'Pilates Mat',
        coach: 'Анна Сафронова'
      })
      +session({
        day: 4,
        time: ['10', '11'],
        title: 'Pilates Mat',
        coach: 'Анна Сафронова'
      })
      +session({
        day: 5,
        time: ['10', '11'],
        title: 'Power Class',
        coach: 'Анна Сафронова'
      })

    +timeSlot('11')
      +session({
        day: 2,
        time: ['11', '12'],
        title: 'Full Body',
        coach: 'Анна Сафронова'
      })
      +session({
        day: 4,
        time: ['11', '12'],
        title: 'Full Body',
        coach: 'Анна Сафронова'
      })
      +session({
        day: 6,
        time: ['11', '12'],
        title: ['Dance Therapy', 'Hatha Yoga'],
        coach: ['Анна Сафронова', 'Елена Лютая'],
        merge: true
      })

    +timeSlot('12')
      +session({
        day: 6,
        time: ['12', '13'],
        title: 'Power Pilates',
        coach: 'Анна Сафронова'
      })

    +timeSlot('13')
      +session({
        day: 6,
        time: ['13', '14'],
        title: ['Relax Yoga', 'Power Class'],
        coach: ['Ольга Лунгу', 'Анна Сафронова'],
        merge: true
      })

    +timeSlot('14')
    //-
      +timeSlot('15')
      +timeSlot('16')
      +timeSlot('17')

    +timeSlot('18')
      +session({
        day: 1,
        time: ['18', '19'],
        title: 'Dance Therapy',
        coach: 'Анна Сафронова',
      })
      +session({
        day: 2,
        time: ['18', '19'],
        title: 'Super Sculpt',
        coach: 'Ольга Петухова'
      })
      +session({
        day: 3,
        time: ['18', '19'],
        title: ['Foundation', 'Flexibility'],
        coach: ['Анастасия Акулова', 'Анна Сафронова'],
        merge: true
      })
      +session({
        day: 4,
        time: ['18', '19'],
        title: 'Super Sculpt',
        coach: 'Ольга Петухова'
      })
      +session({
        day: 5,
        time: ['18', '19'],
        title: 'Foundation',
        coach: 'Анастасия Акулова',
      })

    +timeSlot('19')
      +session({
        day: 1,
        time: ['19', '20'],
        title: 'Power Class',
        coach: 'Анна Сафронова'
      })
      +session({
        day: 2,
        time: ['19', '20'],
        title: ['Fitness Yoga', 'Power Pilates'],
        coach: ['Ольга Лунгу', 'Татьяна Заднипрянец'],
        merge: true
      })
      +session({
        day: 3,
        time: ['19', '20'],
        title: ['Stretching', 'Pilates Mat'],
        coach: ['Анастасия Акулова', 'Анна Сафронова'],
        merge: true
      })
      +session({
        day: 4,
        time: ['19', '20'],
        title: ['Fitness Yoga', 'Power Pilates'],
        coach: ['Ольга Лунгу', 'Татьяна Заднипрянец'],
        merge: true
      })
      +session({
        day: 5,
        time: ['19', '20'],
        title: ['Stretching', 'Pilates Mat'],
        coach: ['Анастасия Акулова', 'Анна Сафронова'],
        merge: true
      })

    +timeSlot('20')
      +session({
        day: 1,
        time: ['20', '21'],
        title: ['Hatha Yoga', 'Men’s Pilates'],
        coach: ['Елена Лютая', 'Анна Сафронова'],
        merge: true
      })
      +session({
        day: 2,
        time: ['20', '21'],
        title: 'Stretching',
        coach: 'Ольга Лунгу'
      })
      +session({
        day: 3,
        time: ['20', '21'],
        title: ['Hatha Yoga', 'Men’s Pilates'],
        coach: ['Елена Лютая', 'Анна Сафронова'],
        merge: true
      })
      +session({
        day: 4,
        time: ['20', '21'],
        title: 'Stretching',
        coach: 'Ольга Лунгу'
      })

block scripts
  script(src="../js/cssFilter.js")
